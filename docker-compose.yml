version: '3'

services:
  vmaas_database:
    container_name: vmaas-database
    image: docker.io/library/postgres:12
    restart: unless-stopped
    shm_size: '256mb'
    environment:
      POSTGRES_DB: vmaas
      POSTGRES_USER: vmaas_admin
      POSTGRES_PASSWORD: vmaas_admin_pwd
    ports:
      - 5432:5432
    volumes:
      - vmaas-db-data:/var/lib/postgresql/data

  vmaas_reposcan:
    command: /vmaas/entrypoint.sh reposcan
    container_name: vmaas-reposcan
    hostname: vmaas-reposcan
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        REQUIRE_RHEL: "no"
    image: vmaas/app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/database-connection-writer.env
      - ./conf/reposcan.env
    ports:
      - 8081:8000
      - 8083:9000
      - 9082:10000
    volumes:
      - vmaas-dump-data:/data:z
    depends_on:
      - vmaas_database

  vmaas_reposcan_db_init:
    command: >
         python3.11 -m vmaas.common.wait_for_services python3.11 -m vmaas.reposcan.database.upgrade
    container_name: vmaas-reposcan-db-init
    hostname: vmaas-reposcan-db-init
    image: vmaas/app:latest
    env_file:
      - ./conf/common.env
      - ./conf/database-connection-admin.env
      - ./conf/reposcan.env
    depends_on:
      - vmaas_database

  vmaas_webapp:
    command: /vmaas/entrypoint.sh webapp
    container_name: vmaas-webapp
    hostname: vmaas-webapp
    image: vmaas/app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/webapp.env
    ports:
      - 8080:8000
      - 9081:10000
    depends_on:
      - vmaas_reposcan

  vmaas_webapp_go:
    command: /vmaas/entrypoint.sh webapp-go
    container_name: vmaas-webapp-go
    hostname: vmaas-webapp-go
    image: vmaas/app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/webapp_go.env
    ports:
      - 8000:8000
      - 9000:9000
      - 9088:10000
    depends_on:
      - vmaas_reposcan
      - vmaas_webapp # to proxy requests

  vmaas_prometheus:
    container_name: vmaas-prometheus
    image: prom/prometheus:v2.21.0
    volumes:
      - prometheus-data:/prometheus
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    security_opt:
      - label=disable
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - vmaas_reposcan
      - vmaas_webapp
    restart: unless-stopped
    profiles:
      - monitoring

  vmaas_grafana:
    container_name: vmaas-grafana
    build:
      context: ./
      dockerfile: ./monitoring/grafana/Dockerfile
    image: vmaas-grafana:latest
    depends_on:
      - vmaas_prometheus
    ports:
      - 3000:3000
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  vmaas-db-data:
  vmaas-dump-data:
  prometheus-data:
  grafana-data:
