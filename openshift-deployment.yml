---
- hosts: all
  vars:
    app_name: vmaas
    apidoc_container_port: 8080
    webapp_container_port: 8080
    reposcan_container_port: 8081
    apidoc_config_map: apidoc-conf-apidoc-env
  tasks:
    - name: Prevent run without tags
      fail:
        msg: "You must run this playbook with tags! Available tags: up, routes-up, down, routes-down, update-images, configure-apidoc."

    - name: Get current project
      command: oc project
      changed_when: False
      register: oc_project_out
      tags:
        - up
        - down
        - update-images
        - routes-up
        - routes-down
        - configure-apidoc

    - name: Print current project
      debug:
        msg: "{{ oc_project_out.stdout }}"
      tags:
        - up
        - down
        - update-images
        - routes-up
        - routes-down
        - configure-apidoc

    - name: Create VMaaS
      shell: kompose --provider openshift convert -o - | ./scripts/openshift_app_label.py {{ app_name }} | oc create -f -
      tags:
        - up

    - name: Create OpenShift routes
      shell: oc expose service apidoc --port {{ apidoc_container_port }}; oc expose service reposcan --port {{ reposcan_container_port }}; oc expose service webapp --port {{ webapp_container_port }}
      tags:
        - up
        - routes-up

    - name: Get exposed reposcan URL
      shell: oc get route reposcan | tail -n 1 | awk '{print $2}'
      register: reposcan_url
      tags:
        - up
        - configure-apidoc

    - name: Get exposed webapp URL
      shell: oc get route webapp | tail -n 1 | awk '{print $2}'
      register: webapp_url
      tags:
        - up
        - configure-apidoc

    - name: Configure API documentation
      shell: oc patch configmap {{ apidoc_config_map }} --patch '{"data":{"API_URLS":"[{\"url\":\"http://{{ webapp_url.stdout }}/api/v1/apispec\",\"name\":\"webapp\"},{\"url\":\"http://{{ reposcan_url.stdout }}/api/v1/apispec\",\"name\":\"reposcan\"}]"}}' && oc rollout latest apidoc
      tags:
        - up
        - configure-apidoc

    - name: Update VMaaS images
      shell: for image in $(grep "image:" docker-compose.yml | awk '{print $2}'); do oc import-image $image; done
      tags:
        - update-images

    - name: Delete OpenShift routes
      shell: oc delete route apidoc reposcan webapp
      tags:
        - down
        - routes-down

    - name: Delete VMaaS
      shell: kompose --provider openshift convert -o - | ./scripts/openshift_app_label.py {{ app_name }} | oc delete -f -
      tags:
        - down
