apiVersion: v1
kind: Template
metadata:
  name: vmaas-database-${RELEASE}

parameters:
- name: RELEASE
  description: Release of this component
  value: '1'
- name: GIT_REF
  description: Git reference in repository to build from
  value: master
- name: DOCKERFILE
  description: Dockerfile to build from
  value: database/Dockerfile
- name: DOCKERFILE_SUFFIX
  description: Dockerfile additional suffix (RHEL)
  value: ""

objects:
- apiVersion: v1
  data:
    POSTGRESQL_DATABASE: vmaas
    POSTGRESQL_HOST: vmaas-database-${RELEASE}
    POSTGRESQL_PASSWORD: vmaas_admin_pwd
    POSTGRESQL_PORT: '5432'
    POSTGRESQL_READER_PASSWORD: vmaas_reader_pwd
    POSTGRESQL_USER: vmaas_admin
    POSTGRESQL_WRITER_PASSWORD: vmaas_writer_pwd
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app: vmaas-${RELEASE}
    name: vmaas-database-conf-database-connection-admin-env-${RELEASE}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: vmaas-db-data-${RELEASE}
    name: vmaas-db-data-${RELEASE}
  spec:
    accessModes: [ReadWriteOnce]
    resources:
      requests: {storage: 5Gi}
  status: {}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: vmaas-${RELEASE}
    name: vmaas-database-${RELEASE}
  spec:
    nodeSelector: null
    output:
      to: {kind: ImageStreamTag, name: 'vmaas-database-${RELEASE}:latest'}
    postCommit: {}
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
    runPolicy: Serial
    source:
      git:
        ref: ${GIT_REF}
        uri: 'https://github.com/RedHatInsights/vmaas.git'
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: ${DOCKERFILE}${DOCKERFILE_SUFFIX}
      type: Docker
    triggers:
    - {type: ConfigChange}
  status: {lastVersion: 0}

- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      app: vmaas-${RELEASE}
    name: vmaas-database-${RELEASE}
  spec:
    tags:
    - name: latest
  status: {dockerImageRepository: ''}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: vmaas-${RELEASE}
      component: vmaas-database-${RELEASE}
    name: vmaas-database-${RELEASE}
  spec:
    replicas: 1
    selector:
      component: vmaas-database-${RELEASE}
    strategy:
      resources: {}
      recreateParams:
        pre:
          failurePolicy: Abort
          execNewPod:
            containerName: vmaas-database
            command:
            - /push_manifest.sh
            - RedHatInsights/manifests
            - stable
            - /opt/app-root/manifest.txt
            - vmaas/vmaas-database.txt
            env:
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: GIT_TOKEN
                  name: github-vulnerability-bot
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: vmaas-database-${RELEASE}
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_DATABASE
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_HOST
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_HOST
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_PASSWORD
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_PORT
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_PORT
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_READER_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_READER_PASSWORD
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_USER
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_USER
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          - name: POSTGRESQL_WRITER_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: POSTGRESQL_WRITER_PASSWORD
                name: vmaas-database-conf-database-connection-admin-env-${RELEASE}
          image: ' '
          name: vmaas-database
          ports:
          - {containerPort: 5432}
          resources:
            limits: {cpu: '1', memory: 1Gi}
            requests: {cpu: 200m, memory: 200Mi}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: vmaas-db-data-${RELEASE}
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
        restartPolicy: Always
        volumes:
        - name: vmaas-db-data-${RELEASE}
          persistentVolumeClaim:
            claimName: vmaas-db-data-${RELEASE}
    test: false
    triggers:
    - {type: ConfigChange}
    - imageChangeParams:
        automatic: true
        containerNames: [vmaas-database]
        from: {kind: ImageStreamTag, name: 'vmaas-database-${RELEASE}:latest'}
      type: ImageChange
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: vmaas-${RELEASE}
    name: vmaas-database-${RELEASE}
  spec:
    ports:
    - {name: '5432', port: 5432, targetPort: 5432}
    selector:
      component: vmaas-database-${RELEASE}
  status:
    loadBalancer: {}
